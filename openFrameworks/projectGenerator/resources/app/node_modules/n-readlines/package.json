{
  "_args": [
    [
      {
        "raw": "n-readlines@https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
        "scope": null,
        "escapedName": "n-readlines",
        "name": "n-readlines",
        "rawSpec": "https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
        "spec": "https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
        "type": "remote"
      },
      "/home/ofadmin/openFrameworks/scripts/dev/openFrameworks_pkg_creation/apps/projectGenerator/frontend"
    ]
  ],
  "_from": "n-readlines@https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
  "_id": "n-readlines@1.0.0",
  "_inCache": true,
  "_location": "/n-readlines",
  "_phantomChildren": {},
  "_requested": {
    "raw": "n-readlines@https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
    "scope": null,
    "escapedName": "n-readlines",
    "name": "n-readlines",
    "rawSpec": "https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
    "spec": "https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
  "_shasum": "c353797f216c253fdfef7e91da4e8b17c29a91a6",
  "_shrinkwrap": null,
  "_spec": "n-readlines@https://registry.npmjs.org/n-readlines/-/n-readlines-1.0.0.tgz",
  "_where": "/home/ofadmin/openFrameworks/scripts/dev/openFrameworks_pkg_creation/apps/projectGenerator/frontend",
  "author": {
    "name": "Yoan Arnaudov",
    "email": "jonidev@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/nacholibre/node-readlines/issues"
  },
  "dependencies": {},
  "description": "Read file line by line without buffering the whole file in memory.",
  "devDependencies": {
    "tape": "^4.9.0"
  },
  "engines": {
    "node": ">=6.x.x"
  },
  "homepage": "https://github.com/nacholibre/node-readlines#readme",
  "keywords": [
    "read",
    "line",
    "reader",
    "linereader",
    "readfile",
    "linebyline",
    "synchronous",
    "sync",
    "readline",
    "readlines"
  ],
  "license": "MIT",
  "main": "./readlines.js",
  "name": "n-readlines",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/nacholibre/node-readlines.svg)](https://travis-ci.org/nacholibre/node-readlines)\n# node-readlines\nReading file line by line may seem like a trivial problem, but in node, there is no straightforward way to do it. There are a lot of libraries using Transform Streams to achieve it, but it seems like a overkill, so I've wrote simple version using only the `filesystem` module of node. Note that this is *synchronous* library.\n\nInstall with\n`npm install n-readlines`\n\n---------------------------------------\n\n## Documentation\n### new readlines(filename, [options]);\n### new readlines(fd, [options]);\n\n**Arguments**\n\n* `filename` - String path to the file you want to read from\n* `fd` - File descriptor\n* `options` - Object\n  * `readChunk` - Integer number of bytes to read at once. Default: 1024\n  * `newLineCharacter` - String new line character, only works with one byte characters for now. Default: `\\n` which is `0x0a` hex encoded\n\n`node-readlines` can handle files without newLineCharacter after the last line\n\n---------------------------------------\n\n### readlines.next()\nReturns `buffer` with the line data without the `newLineCharacter` or `false` if end of file is reached.\n\n---------------------------------------\n### readlines.reset()\nResets the pointer and starts from the beginning of the file. This works only if the end is not reached.\n\n---------------------------------------\n### readlines.close()\nManually close the open file, subsequent `next()` calls will return false. This works only if the end is not reached.\n\n---------------------------------------\n\n## Example\n```javascript\nconst lineByLine = require('./readlines.js');\nconst liner = new lineByLine('./test/fixtures/normalFile.txt');\n\nlet line;\nlet lineNumber = 0;\n\nwhile (line = liner.next()) {\n        console.log('Line ' + lineNumber + ': ' + line.toString('ascii'));\n            lineNumber++;\n}\n\nconsole.log('end of line reached');\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/nacholibre/node-readlines.git"
  },
  "scripts": {
    "test": "tape test/*.test.js"
  },
  "version": "1.0.0"
}
